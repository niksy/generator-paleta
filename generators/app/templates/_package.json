{
  "name": "<%= moduleName %>",
  "version": "<% if ( version ) { %><%= version %><% } else { %>0.0.0<% } %>",
  "description": "<%= moduleDescription %>",
  "type": "module",<% if ( !cli ) { %>
  "main": "<% if ( sassModule ) { %>_index.scss<% } else if ( cssModule ) { %>index.css<% } else { %><% if ( transpile ) { %><% if ( bundleCjs ) { %>cjs/<% } else { %>esm/<% } %><% } %>index.js<% } %>",
  "module": "<% if ( transpile ) { %>esm/<% } %>index.js",
  "exports": {
    ".": {<% if ( browserModule && styles || sassModule || cssModule ) { %><% if ( sassModule ) { %>
      "sass": "./_index.scss",<% } %>
      "style": "./<% if ( sassModule ) { %>_index.scss<% } else if ( cssModule ) { %>index.css<% } else { %><% if ( transpile ) { %>dist/<% } %>index.css<% } %>",<% } %>
      "import": "./<% if ( transpile ) { %>esm/<% } %>index.js"<% if ( bundleCjs ) { %>,
      "require": "./cjs/index.js"<% } %>
    },
    "./package.json": "./package.json"
  },
  "sideEffects": false,<% } %>
  "author": "<%= humanName %> <<%= email %>> (<%= website %>)",
  "files": [<% if ( !transpile ) { %>
    "<% if ( browserModule && styles || sassModule || cssModule ) { %><% if ( sassModule ) { %>_index.scss<% } else if ( cssModule ) { %>index.css<% } else { %>index.css<% } %><% } else { %>index.<% if ( sourceMaps ) { %>{js,js.map}<% } else { %>js<% } %><% } %>",<% } %><% if ( bundleCjs ) { %>
    "cjs/",<% } %><% if ( transpile ) { %><% if ( !browserModule && !styles ) { %>
    "esm/",<% } else { %>
    "dist/",<% } %><% } else if ( !transpile ) { %>
    "lib/",<% } %><% if ( changelog ) { %>
    "CHANGELOG.md",<% } %>
    "LICENSE.md",
    "README.md"
  ],
  "license": "MIT",<% if ( browserModule && styles || sassModule || cssModule ) { %>
  "style": "<% if ( sassModule ) { %>_index.scss<% } else if ( cssModule ) { %>index.css<% } else { %><% if ( transpile ) { %>dist/<% } %>index.css<% } %>",<% } %><% if ( cli ) { %>
  "bin": {
    "<%= cliCommandName %>": "cli.js"
  },<% } %><% if ( manualTests || automatedTests || integrationTests ) { %>
  "directories": {
    "test": "test"
  },<% } %>
  "scripts": {
    "release": "np --no-release-draft",<% if ( changelog ) { %>
    "version": "if [ $(git rev-parse --abbrev-ref HEAD) == 'master' ]; then sed -i '' '/\\[unreleased\\]:/d' CHANGELOG.md && version-changelog CHANGELOG.md && changelog-verify CHANGELOG.md && git add CHANGELOG.md; else echo; fi"<% if ( githubRelease ) { %>,
    "postpublish": "GITHUB_TOKEN=$GITHUB_RELEASE_TOKEN github-release-from-changelog"<% } %>,<% } %><% if ( (automatedTests && browserModule && !sassModule) || manualTests || integrationTests ) { %>
    "lint": "<% if ( automatedTests || integrationTests ) { %>eslint '{<% if ( complexTranspile ) { %>src/index,src/lib/**/*<% if ( cli ) { %>,src/cli<% } %><% } else { %>index,lib/**/*<% if ( cli ) { %>,cli<% } %><% } %>,test/**/*}<% if ( vanillaJsWidget || (typescript && typescriptMode === 'full') ) { %>.{js,<% if (typescript && typescriptMode === 'full') { %>,ts<% } %><% if (vanillaJsWidget) { %>,svelte<% } %>}<% } else { %>.js<% } %>'<% } else { %>eslint '{<% if ( complexTranspile ) { %>src/index,src/lib/**/*<% if ( cli ) { %>,src/cli<% } %><% } else { %>index,lib/**/*<% if ( cli ) { %>,cli<% } %><% } %>}<% if ( vanillaJsWidget || (typescript && typescriptMode === 'full') ) { %>.{js,<% if (typescript && typescriptMode === 'full') { %>,ts<% } %><% if (vanillaJsWidget) { %>,svelte<% } %>}<% } else { %>.js<% } %>'<% } %><% if ( browserModule && styles ) { %> && stylelint 'index.css'<% } %>"<% } else if ( sassModule ) { %>
    "lint": "<% if ( automatedTests ) { %>eslint 'test/**/*<% if ( typescript && typescriptMode === 'full' ) { %>.{js,ts}<% } else { %>.js<% } %>' && stylelint '{_index,test/**/*}.scss'<% } else { %>stylelint '_index.scss'<% } %>"<% } else { %>
    "lint": "<% if ( automatedTests ) { %>eslint '{<% if ( complexTranspile ) { %>src/index,src/lib/**/*<% if ( cli ) { %>,src/cli<% } %><% } else { %>index,lib/**/*<% if ( cli ) { %>,cli<% } %><% } %>,test/**/*}<% if ( typescript && typescriptMode === 'full' ) { %>.{js,ts}<% } else { %>.js<% } %>'<% } else { %>eslint '{<% if ( complexTranspile ) { %>src/index,src/lib/**/*<% if ( cli ) { %>,src/cli<% } %><% } else { %>index,lib/**/*<% if ( cli ) { %>,cli<% } %><% } %>}<% if ( typescript && typescriptMode === 'full' ) { %>.{js,ts}<% } else { %>.js<% } %>'<% } %><% if ( browserModule && styles ) { %> && stylelint 'index.css'<% } %>"<% } %><% if ( typescript ) { %>,
    "lint:types": "tsc"<% } %><% if ( automatedTests && browserModule && !sassModule ) { %>,
    "test:automated": "<% if ( transpile ) { %>BABEL_ENV=test <% } %>karma start",
    "test:automated:watch": "npm run test:automated -- --auto-watch --no-single-run"<% } %><% if ( manualTests || integrationTests ) { %>,
    "test:generate-static-site": "<% if ( transpile ) { %>BABEL_ENV=test <% } %><% if ( bundlingTool === 'webpack' ) { %>webpack --config ./test/manual/webpack.config.js<% } %><% if ( bundlingTool === 'rollup' ) { %>rollup --config ./test/manual/rollup.config.js<% } %>",
    "test:generate-static-site:watch": "<% if ( transpile ) { %>BABEL_ENV=test <% } %><% if ( bundlingTool === 'webpack' ) { %>webpack serve --config ./test/manual/webpack.config.js<% } %><% if ( bundlingTool === 'rollup' ) { %>rollup --config ./test/manual/rollup.config.js --watch<% } %>"<% if ( integrationTests ) { %>,
    "test:integration": "npm run test:generate-static-site && wdio",
    "test:integration:watch": "npm run test:generate-static-site:watch & wdio"<% } %><% } %><% if ( manualTests ) { %>,
    "test:manual": "npm run test:generate-static-site:watch"<% } %><% if ( (automatedTests && browserModule && !sassModule) || manualTests || integrationTests ) { %>,
    "test": "<% if ( automatedTests && browserModule && !sassModule ) { %>npm run test:automated<% } %><% if ( integrationTests ) { %> && npm run test:integration<% } %>"<% } else if ( sassModule ) { %>,
    "test": "<% if ( automatedTests ) { %>mocha 'test/**/*.<%= extension || 'js' %>'<% } %>"<% if ( automatedTests ) { %>,
    "test:watch": "npm test -- --watch"<% } %><% } else { %>,
    "test": "<% if ( automatedTests ) { %><% if ( codeCoverage ) { %>NODE_OPTIONS='--experimental-loader=@istanbuljs/esm-loader-hook --no-warnings' <% if ( transpile ) { %>BABEL_ENV=test <% } %>nyc mocha<% } else { %>mocha<% } %><% if ( transpile ) { %> --require @babel/register<% } %><% if ( !transpile && typescript && typescriptMode === 'full' ) { %> --require ts-node/register --extension ts<% } %> 'test/**/*.<%= extension || 'js' %>'<% if ( codeCoverage ) { %> && nyc check-coverage<% } %><% } else { %><% } %>"<% if ( automatedTests ) { %>,
    "test:watch": "<% if ( codeCoverage ) { %>nodemon<% if ( typescript && typescriptMode === 'full' ) { %> --ext js,json,ts<% } %> --exec npm test<% } else { %>npm test -- --watch<% } %>"<% } %><% if ( codeCoverageService ) { %>,
    "posttest:ci": "cat ./coverage/lcov.info | coveralls"<% } %><% } %><% if ( transpile ) { %>,
    "build": "rollup --config rollup.config.js",
    "module-check": "<% if ( bundleCjs ) { %>node -e 'require(\"<%= moduleName %>\");' && <% } %>node --input-type=module -e 'import \"<%= moduleName %>\";'"<% } %>,
    "prerelease": "npm run lint<% if ( transpile ) { %><% if ( typescript ) { %> && npm run lint:types<% } %> && npm run build<% } %><% if ( !(browserModule && styles || sassModule || cssModule) ) { %> && npm run module-check<% } %>"<% if ( transpile ) { %>,
    "prepublishOnly": "npm run build"<% } %>
  },
  "devDependencies": {
    "@istanbuljs/esm-loader-hook": "^0.2.0",
    "husky": "^4.3.0",
    "lint-staged": "^10.4.2",
    "np": "^7.6.0",<% if ( prettier ) { %>
    "prettier": "^2.4.0",<% } %>
    "eslint": "^8.5.0",
    "eslint-config-nitpick": "^11.1.0"<% if ( typescript && typescriptMode === 'full' ) { %>,
    "@typescript-eslint/parser": "^4.28.4"<% } %><% if ( prettier ) { %>,
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0"<% } %><% if ( changelog ) { %>,
    "version-changelog": "^3.1.1",
    "changelog-verify": "^1.1.2"<% if ( githubRelease ) { %>,
    "github-release-from-changelog": "^2.1.1"<% } %><% } %><% if ( browserModule && styles ) { %>,
    "stylelint": "^14.1.0",
    "stylelint-config-nitpick": "^9.0.0"<% if ( prettier ) { %>,
    "stylelint-config-prettier": "^9.0.3",
    "stylelint-prettier": "^2.0.0"<% } %><% } %><% if ( automatedTests && browserModule && !sassModule ) { %>,
    "karma": "^6.4.3",
    "karma-sourcemap-loader": "^0.3.7"<% if ( bundlingTool === 'webpack' ) { %>,
    "karma-webpack": "^5.0.0"<% } %><% if ( bundlingTool === 'rollup' ) { %>,
    "karma-rollup-preprocessor": "^7.0.0"<% } %><% if ( cloudBrowsers ) { %>,
    "karma-browserstack-launcher": "^1.6.0"<% } %>,
    "karma-chrome-launcher": "^3.1.0",<% if ( browserTestType === 'headless' ) { %>
    "puppeteer": "^5.4.0",<% } %><% if ( usesHtmlFixtures ) { %>
    "karma-html2js-preprocessor": "^1.1.0",
    "karma-fixture": "^0.2.6",<% } %>
    "karma-mocha": "^2.0.1",
    "karma-mocha-reporter": "^2.2.5"<% } %><% if ( automatedTests || integrationTests ) { %>,
    "mocha": "^10.3.0"<% } %><% if ( automatedTests && codeCoverage && !browserModule ) { %>,
    "nodemon": "^2.0.6",
    "nyc": "^15.1.0"<% } %><% if ( automatedTests && codeCoverage && browserModule && !sassModule ) { %><% if ( bundlingTool === 'webpack' ) { %>,
    "@jsdevtools/coverage-istanbul-loader": "^3.0.5"<% } %><% if ( bundlingTool === 'rollup' ) { %>,
    "rollup-plugin-istanbul": "^3.0.0"<% } %>,
    "karma-coverage": "^2.0.3"<% } %><% if ( codeCoverageService ) { %>,
    "coveralls": "^2.11.11"<% } %><% if ( manualTests || integrationTests ) { %>,
    "del": "^6.0.0",
    "postcss": "^8.3.11",
    "globby": "^11.0.1",<% if ( bundlingTool === 'webpack' ) { %>
    "css-loader": "^5.0.0",
    "html-webpack-plugin": "^4.5.0",
    "mini-css-extract-plugin": "^1.2.0",
    "postcss-loader": "^6.2.0",
    "webpack-cli": "^4.1.0",
    "webpack-dev-server": "^3.11.0",<% } %><% if ( bundlingTool === 'rollup' ) { %>
    "rollup-plugin-postcss": "^4.0.1",
    "rollup-plugin-serve": "^1.0.3",
    "rollup-plugin-static-site": "0.1.0",<% } %>
    "postcss-import": "^14.0.2",
    "postcss-preset-env": "^7.0.0",
    "suitcss-components-test": "^1.0.0"<% } %><% if ( (manualTests || integrationTests) && browserModule && !sassModule && bundlingTool === 'rollup' ) { %>,
    "minimist": "^1.2.0"<% } %><% if ( (manualTests || integrationTests) || ((browserModule && !sassModule) && (transpile || automatedTests)) ) { %><% if ( bundlingTool === 'webpack' ) { %>,
    "webpack": "^5.2.0",<% if ( typescript && typescriptMode === 'full' ) { %>
    "ts-loader": "^9.2.3",<% } %>
    "node-stdlib-browser": "^1.2.0"<% } %><% } %><% if ( sassModule ) { %>,
    "sass-true": "^2.1.3"<% } %><% if ( integrationTests ) { %><% if ( cloudBrowsers ) { %>,
    "@wdio/browserstack-service": "^6.6.7"<% } %>,
    "wdio-docker-service": "^3.0.0",
    "@wdio/mocha-framework": "^6.6.8",
    "@wdio/spec-reporter": "^6.6.8",
    "@wdio/cli": "^6.6.7",
    "webdriverio": "^6.6.8",
    "local-web-server": "^4.2.1",
    "http-shutdown": "^1.0.3"<% } %><% if ( transpile ) { %>,
    "@babel/core": "^7.2.2",
    "core-js": "^2.6.5",
    "@babel/preset-env": "^7.12.1"<% if ( typescript && typescriptMode === 'full' ) { %>,
    "@babel/preset-typescript": "^7.14.5"<% } %><% if ( browserModule && !sassModule ) { %><% if ( bundlingTool === 'webpack' ) { %>,
    "babel-loader": "^8.1.0"<% } %><% } %><% if ( (automatedTests || manualTests) && browserModule && !sassModule ) { %>,
    "@babel/plugin-transform-runtime": "^7.2.0",
    "@babel/runtime": "^7.2.0"<% } %><% if ( automatedTests ) { %><% if ( !browserModule || (browserModule && integrationTests) ) { %>,
    "@babel/register": "^7.0.0"<% } %><% if ( codeCoverage ) { %><% if ( !browserModule && !sassModule ) { %>,
    "babel-plugin-istanbul": "^6.0.0"<% } %><% } %><% } %><% } %>,
    "rollup": "^2.32.1"<% if ( !transpile && typescript && typescriptMode === 'full' ) { %>,
    "@rollup/plugin-typescript": "^8.2.3"<% } %><% if ( transpile ) { %>,
    "@rollup/plugin-babel": "^5.2.1"<% } %><% if ( bundlingTool === 'rollup' || (transpile && typescript && typescriptMode === 'full') ) { %>,
    "@rollup/plugin-node-resolve": "^9.0.0"<% } %><% if ( bundlingTool === 'rollup' ) { %>,
    "@rollup/plugin-commonjs": "^15.1.0",
    "rollup-plugin-node-builtins": "^2.1.2",
    "rollup-plugin-node-globals": "^1.4.0"<% } %><% if ( vanillaJsWidget ) { %>,
    "eslint-plugin-html": "^6.0.0",
    "rollup-plugin-svelte": "^6.1.0",
    "svelte": "^2.16.1"<% } %><% if ( typescript ) { %>,
    "typescript": "^4.3.5",
    "cpy": "^8.1.2",
    "execa": "^5.1.1",<% if ( !transpile && typescriptMode === 'full' && (!browserModule || (browserModule && integrationTests)) ) { %>
    "ts-node": "^10.1.0",<% } %><% if ( browserModule && usesHtmlFixtures ) { %>
    "@types/karma-fixture": "^0.2.5",<% } %>
    "@types/node": "^16.3.0"<% if ( automatedTests || integrationTests ) { %>,
    "@types/mocha": "^10.0.6"<% } %><% } %>
  },<% if ( isScopedPackage ) { %>
  "publishConfig": {
    "access": "public"
  },<% } %>
  "engines": {
    "node": ">=<%= nodeEngineVersion %>"
  }<% if ( keywords.length > 0 ) { %>,
  "keywords": [<% for ( var i = 0, keywordsLength = keywords.length; i < keywordsLength; i++ ) { %>
    "<%= keywords[i] %>"<% if ( i !== keywordsLength-1 ) { %>,<% } %>
  <% } %>]<% } %>,
  "repository": {
    "type": "git",
    "url": "git+https://<%= gitRepo.host %>/<%= gitRepo.repository %>.git"
  },
  "bugs": {
    "url": "https://<%= gitRepo.host %>/<%= gitRepo.repository %>/issues"
  },
  "homepage": "https://<%= gitRepo.host %>/<%= gitRepo.repository %>#readme"<% if ( typescript ) { %>,
  "types": "<% if ( transpile ) { %>esm/<% } %>index.d.ts"<% } %>
}
