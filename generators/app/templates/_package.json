{
  "name": "<%= moduleName %>",
  "version": "<% if ( version ) { %><%= version %><% } else { %>0.0.0<% } %>",
  "description": "<%= moduleDescription %>",<% if ( !cli ) { %>
  "main": "<% if ( sassModule ) { %>_index.scss<% } else if ( cssModule ) { %>index.css<% } else { %><% if ( transpile ) { %>dist/<% } %>index.js<% } %>",<% } %>
  "author": "<%= humanName %> <<%= email %>> (<%= website %>)",<% if ( filesProperty ) { %>
  "files": [
  	"<% if ( sassModule ) { %>_index.scss<% } else if ( cssModule ) { %>index.css<% } else { %><% if ( transpile ) { %>dist/<% } %>index.js<% } %>",<% if ( transpile ) { %>
  	"dist/"<% } else { %>"lib/"<% } %>,
  	"LICENSE.md",
  	"README.md"
  ],<% } %>
  "license": "MIT",<% if ( browserModule && styles || sassModule || cssModule ) { %>
  "style": "<% if ( sassModule ) { %>_index.scss<% } else if ( cssModule ) { %>index.css<% } else { %>index.css<% } %>",<% } %><% if ( cli ) { %>
  "bin": {
    "<%= cliCommandName %>": "cli.js"
  },<% } %><% if ( manualTests || automatedTests || integrationTests ) { %>
  "directories": {
    "test": "test"
  },<% } %>
  "scripts": {<% if ( (automatedTests && browserModule && !sassModule) || manualTests || integrationTests ) { %>
    "lint": "<% if ( automatedTests || integrationTests ) { %>eslint '{index,test/**/*}.js'<% } else { %>eslint 'index.js'<% } %><% if ( browserModule && styles ) { %> && stylelint 'index.css'<% } %>"<% } %><% if ( automatedTests && browserModule && !sassModule ) { %>,
    "test:automated": "karma start",
    "test:automated:local": "karma start --browsers Chrome"<% } %><% if ( integrationTests ) { %>,
    "test:integration": "gulp test:prepare && wdio",
    "test:integration:local": "eval \"$(docker-machine env dev)\" && gulp test:prepare && wdio --local --host $(docker-machine ip dev)"<% } %><% if ( manualTests ) { %>,
    "test:manual:local": "gulp test:local:manual --watch"<% } %><% if ( (automatedTests && browserModule && !sassModule) || manualTests || integrationTests ) { %>,
    "test": "npm run lint<% if ( automatedTests && browserModule && !sassModule ) { %> && npm run test:automated<% } %><% if ( integrationTests ) { %> && npm run test:integration<% } %>"<% } else if ( sassModule ) { %>
    "test": "<% if ( automatedTests ) { %>eslint 'test/**/*.js' && stylelint '{_index,test/**/*}.scss' && mocha 'test/**/*.js'<% if ( testingInterface !== 'bdd' ) { %> --ui <%= testingInterface %><% } %><% } else { %>stylelint '_index.scss'<% } %>"<% } else { %>
    "test": "<% if ( automatedTests ) { %><% if ( transpile && codeCoverage && codeCoverageTool === 'nyc' ) { %>BABEL_ENV=test <% } %>eslint '{index,test/**/*}.js' && <% if ( codeCoverage ) { %><% if ( codeCoverageTool === 'nyc' ) { %>nyc mocha<% } else { %>istanbul cover _mocha<% } %><% } else { %>mocha<% } %><% if ( transpile ) { %> --compilers js:babel-register<% } %> 'test/**/*.js'<% if ( codeCoverage ) { %> && <% if ( codeCoverageTool === 'nyc' ) { %>nyc check-coverage<% } else { %>istanbul check-coverage<% } %><% } %><% if ( testingInterface !== 'bdd' ) { %><% if ( codeCoverage ) { %> --<% } %> --ui <%= testingInterface %><% } %><% } else { %>eslint 'index.js'<% } %><% if ( browserModule && styles ) { %> && stylelint 'index.css'<% } %>"<% if ( codeCoverageService ) { %>,
    "posttest:ci": "cat ./coverage/lcov.info | coveralls"<% } %><% } %><% if ( transpile ) { %>,
    "build": "babel '{index,lib/**/*}.js' --out-dir dist/",
    "prepublish": "npm run build"<% } %>
  }<% if ( jqueryModule ) { %>,
  "dependencies": {
    "jquery": "^1.12.4"
  }<% } %>,
  "devDependencies": {
    "eslint": "^3.1.1",
    "eslint-config-niksy": "^3.0.1"<% if ( browserModule && styles ) { %>,
    "stylelint": "^7.0.3",
    "stylelint-config-niksy": "^3.0.1"<% } %><% if ( automatedTests && browserModule && !sassModule ) { %>,
    "karma": "^1.1.0",
    "karma-browserify": "^5.0.5"<% if ( cloudBrowsers ) { %>,
    "karma-browserstack-launcher": "^1.0.0"<% } %>,
    "karma-chrome-launcher": "^1.0.1",
    "karma-html2js-preprocessor": "^1.0.0",
    "karma-mocha": "~1.0.1",
    "karma-mocha-reporter": "^2.0.3"<% } %><% if ( automatedTests || integrationTests ) { %>,
    "mocha": "^3.1.2"<% } %><% if ( automatedTests && codeCoverage && !browserModule ) { %>,<% if ( codeCoverageTool === 'nyc' ) { %>
    "nyc": "^8.4.0"<% } else { %>
    "istanbul": "^0.4.3"<% } %><% } %><% if ( automatedTests && codeCoverage && browserModule && !sassModule ) { %>,
    "istanbul": "^0.4.3",
    "browserify-istanbul": "^2.0.0",
    "karma-coverage": "^1.0.0"<% } %><% if ( codeCoverageService ) { %>,
    "coveralls": "^2.11.11"<% } %><% if ( manualTests || integrationTests ) { %>,
    "del": "^2.2.0",
    "globby": "^4.1.0",
    "gulp": "^3.9.1",
    "gulp-debug": "^2.1.2",
    "gulp-nunjucks-render": "^2.0.0",
    "gulp-plumber": "^1.1.0",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-util": "^3.0.7",
    "minimist": "^1.2.0",
    "local-web-server": "^1.2.4",
    "@niksy/babayaga": "^0.1.1"<% } %><% if ( sassModule ) { %>,
    "sass-true": "^2.1.3"<% } %><% if ( manualTests ) { %>,
    "opn": "^4.0.2"<% } %><% if ( integrationTests ) { %><% if ( cloudBrowsers ) { %>,
    "wdio-browserstack-service": "^0.1.3"<% } %>,
    "wdio-mocha-framework": "^0.5.4",
    "wdio-spec-reporter": "^0.0.2",
    "webdriverio": "^4.0.9",
    "execa": "^0.4.0",
    "http-shutdown": "^1.0.3"<% } %><% if ( transpile ) { %>,
    "babel-cli": "^6.18.0",
    "babel-preset-niksy": "^1.0.0"<% if ( browserModule && !sassModule ) { %>,
    "babelify": "^7.3.0"<% } %><% if ( automatedTests ) { %><% if ( !browserModule || (browserModule && integrationTests) ) { %>,
    "babel-register": "^6.18.0"<% } %><% if ( codeCoverage ) { %><% if ( browserModule && !sassModule ) { %>,
    "browserify-babel-istanbul": "^0.4.0"<% } else { %>,
    "babel-plugin-istanbul": "^2.0.3"<% } %><% } %><% } %><% } %>
  },<% if ( isScopedPackage ) { %>
  "publishConfig": {
    "access": "public"
  },<% } %>
  "engines": {
    "node": ">=4"
  }<% if ( keywords.length > 0 ) { %>,
  "keywords": [<% for ( var i = 0, keywordsLength = keywords.length; i < keywordsLength; i++ ) { %>
    "<%= keywords[i] %>"<% if ( i !== keywordsLength-1 ) { %>,<% } %>
  <% } %>]<% } %>,
  "repository": {
    "type": "git",
    "url": "git+https://<%= gitRepo.host %>/<%= gitRepo.repository %>.git"
  },
  "bugs": {
    "url": "https://<%= gitRepo.host %>/<%= gitRepo.repository %>/issues"
  },
  "homepage": "https://<%= gitRepo.host %>/<%= gitRepo.repository %>#readme"
}
