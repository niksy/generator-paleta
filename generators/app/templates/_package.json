{
  "name": "<%= moduleName %>",
  "version": "<% if ( version ) { %><%= version %><% } else { %>0.0.0<% } %>",
  "description": "<%= moduleDescription %>",<% if ( !cli ) { %>
  "main": "<% if ( sassModule ) { %>_index.scss<% } else if ( cssModule ) { %>index.css<% } else { %><% if ( transpile && !complexTranspile ) { %>dist/<% } %>index<% if ( esModules ) { %>.cjs<% } %>.js<% } %>",<% if ( esModules ) { %>
  "module": "<% if ( transpile && !complexTranspile ) { %>dist/<% } %>index.esm.js",
  "sideEffects": false,<% } %><% } %>
  "author": "<%= humanName %> <<%= email %>> (<%= website %>)",
  "files": [
    "<% if ( sassModule ) { %>_index.scss<% } else if ( cssModule ) { %>index.css<% } else { %><% if ( transpile && !complexTranspile ) { %>dist/<% } %>index<% if ( esModules ) { %>.cjs<% } %>.js<% } %>",<% if ( esModules ) { %>
    "<% if ( transpile && !complexTranspile ) { %>dist/<% } %>index.esm.js",<% } %><% if ( transpile && !complexTranspile ) { %>
    "dist/",<% } else if ( !transpile && !esModules ) { %>
    "lib/",<% } %><% if ( changelog ) { %>
    "CHANGELOG.md",<% } %>
    "LICENSE.md",
    "README.md"
  ],
  "license": "MIT",<% if ( browserModule && styles || sassModule || cssModule ) { %>
  "style": "<% if ( sassModule ) { %>_index.scss<% } else if ( cssModule ) { %>index.css<% } else { %>index.css<% } %>",<% } %><% if ( cli ) { %>
  "bin": {
    "<%= cliCommandName %>": "cli.js"
  },<% } %><% if ( manualTests || automatedTests || integrationTests ) { %>
  "directories": {
    "test": "test"
  },<% } %>
  "scripts": {
    "release": "np",<% if ( changelog ) { %>
    "version": "version-changelog CHANGELOG.md && changelog-verify CHANGELOG.md && git add CHANGELOG.md"<% if ( githubRelease ) { %>,
    "postpublish": "GITHUB_TOKEN=GITHUB_RELEASE_TOKEN github-release-from-changelog"<% } %>,<% } %><% if ( (automatedTests && browserModule && !sassModule) || manualTests || integrationTests ) { %>
    "lint": "<% if ( automatedTests || integrationTests ) { %>eslint '{<% if ( complexTranspile ) { %>src/index,src/lib/**/*<% if ( cli ) { %>,src/cli<% } %><% } else { %>index,lib/**/*<% if ( cli ) { %>,cli<% } %><% } %>,test/**/*}.js'<% } else { %>eslint '{<% if ( complexTranspile ) { %>src/index,src/lib/**/*<% if ( cli ) { %>,src/cli<% } %><% } else { %>index,lib/**/*<% if ( cli ) { %>,cli<% } %><% } %>}.js'<% } %><% if ( browserModule && styles ) { %> && stylelint 'index.css'<% } %>"<% } %><% if ( automatedTests && browserModule && !sassModule ) { %>,
    "test:automated": "<% if ( transpile ) { %>BABEL_ENV=test <% } %>karma start",
    "test:automated:watch": "npm run test:automated -- --auto-watch --no-single-run"<% } %><% if ( integrationTests ) { %>,
    "test:generate-static-site": "<% if ( bundlingTool === 'webpack' ) { %>webpack --config ./test/manual/webpack.config.js<% } %><% if ( bundlingTool === 'rollup' ) { %>rollup --config ./test/manual/rollup.config.js<% } %>",
    "test:generate-static-site:watch": "<% if ( bundlingTool === 'webpack' ) { %>webpack-dev-server --config ./test/manual/webpack.config.js<% } %><% if ( bundlingTool === 'rollup' ) { %>rollup --config ./test/manual/rollup.config.js --watch<% } %>",
    "test:integration": "npm run test:generate-static-site && <% if ( esModules ) { %>npx -n=--require -n=esm <% } %>wdio",
    "test:integration:watch": "npm run test:generate-static-site:watch & <% if ( esModules ) { %>npx -n=--require -n=esm <% } %>wdio"<% } %><% if ( manualTests ) { %>,
    "test:manual": "npm run test:generate-static-site:watch"<% } %><% if ( (automatedTests && browserModule && !sassModule) || manualTests || integrationTests ) { %>,
    "test": "npm run lint<% if ( automatedTests && browserModule && !sassModule ) { %> && npm run test:automated<% } %><% if ( integrationTests ) { %> && npm run test:integration<% } %>"<% } else if ( sassModule ) { %>
    "test": "<% if ( automatedTests ) { %>eslint 'test/**/*.js' && stylelint '{_index,test/**/*}.scss' && mocha 'test/**/*.js'<% } else { %>stylelint '_index.scss'<% } %>"<% } else { %>
    "test": "<% if ( automatedTests ) { %>eslint '{<% if ( complexTranspile ) { %>src/index,src/lib/**/*<% if ( cli ) { %>,src/cli<% } %><% } else { %>index,lib/**/*<% if ( cli ) { %>,cli<% } %><% } %>,test/**/*}.js' && <% if ( codeCoverage ) { %><% if ( transpile ) { %>BABEL_ENV=test <% } %>nyc mocha<% } else { %>mocha<% } %><% if ( transpile ) { %> --require @babel/register<% } %><% if ( esModules ) { %> --require esm<% } %> 'test/**/*.js'<% if ( codeCoverage ) { %> && nyc check-coverage<% } %><% } else { %>eslint '{<% if ( complexTranspile ) { %>src/index,src/lib/**/*<% if ( cli ) { %>,src/cli<% } %><% } else { %>index,lib/**/*<% if ( cli ) { %>,cli<% } %><% } %>}.js'<% } %><% if ( browserModule && styles ) { %> && stylelint 'index.css'<% } %>"<% if ( codeCoverageService ) { %>,
    "posttest:ci": "cat ./coverage/lcov.info | coveralls"<% } %><% } %><% if ( transpile || esModules ) { %>,
    "build": "<% if ( esModules ) { %>rollup --config rollup.config.js<% } else { %>babel <% if ( complexTranspile ) { %>src<% } else { %>'{index,lib/**/*}.js'<% } %> --out-dir <% if ( complexTranspile ) { %>./<% } else { %>dist/<% } %><% } %>",
    "prepublishOnly": "npm run build"<% } %>
  }<% if ( jqueryModule ) { %>,
  "dependencies": {
    "jquery": "^1.12.4"
  }<% } %>,
  "devDependencies": {
    "np": "^3.0.4",
    "eslint": "^5.4.0",
    "eslint-config-niksy": "^6.1.0",
    "eslint-plugin-extend": "^0.1.1",
    "eslint-plugin-import": "^2.13.0"<% if ( automatedTests ) { %>,
    "eslint-plugin-mocha": "^5.1.0"<% } %>,
    "eslint-plugin-node": "^7.0.1",
    "eslint-plugin-promise": "^4.0.0",
    "eslint-plugin-unicorn": "^5.0.0"<% if ( changelog ) { %>,
    "version-changelog": "^3.1.1",
    "changelog-verify": "^1.1.2"<% if ( githubRelease ) { %>,
    "github-release-from-changelog": "^1.3.2"<% } %><% } %><% if ( false ) { %>,
    "eslint-plugin-react": "^7.9.1",
    "eslint-plugin-vue": "^5.0.0-beta.3"<% } %><% if ( browserModule && styles ) { %>,
    "stylelint": "^9.2.1",
    "stylelint-config-niksy": "^5.1.1"<% } %><% if ( automatedTests && browserModule && !sassModule ) { %>,
    "karma": "^1.1.0",
    "karma-sourcemap-loader": "^0.3.7"<% if ( bundlingTool === 'webpack' ) { %>,
    "karma-webpack": "^3.0.0"<% } %><% if ( bundlingTool === 'rollup' ) { %>,
    "karma-rollup-preprocessor": "^7.0.0-rc.1"<% } %><% if ( cloudBrowsers ) { %>,
    "karma-browserstack-launcher": "^1.0.0"<% } %>,
    "karma-chrome-launcher": "^1.0.1",<% if ( browserTestType === 'headless' ) { %>
    "puppeteer": "^1.6.1",<% } %>
    "karma-html2js-preprocessor": "^1.0.0",
    "karma-fixture": "^0.2.6",
    "karma-mocha": "^1.3.0",
    "karma-mocha-reporter": "^2.2.5"<% } %><% if ( automatedTests || integrationTests ) { %>,
    "mocha": "^4.1.0"<% if ( esModules ) { %>,
    "esm": "^3.0.51"<% } %><% } %><% if ( automatedTests && codeCoverage && !browserModule ) { %>,
    "nyc": "^12.0.2"<% } %><% if ( automatedTests && codeCoverage && browserModule && !sassModule ) { %><% if ( bundlingTool === 'webpack' ) { %>,
    "istanbul-instrumenter-loader": "^3.0.1"<% } %><% if ( bundlingTool === 'rollup' ) { %>,
    "rollup-plugin-istanbul": "^2.0.1"<% } %>,
    "karma-coverage-istanbul-reporter": "^2.0.1"<% } %><% if ( codeCoverageService ) { %>,
    "coveralls": "^2.11.11"<% } %><% if ( manualTests || integrationTests ) { %>,
    "del": "^2.2.0",
    "globby": "^4.1.0",<% if ( bundlingTool === 'webpack' ) { %>
    "css-loader": "^2.1.0",
    "html-webpack-plugin": "^3.2.0",
    "mini-css-extract-plugin": "^0.5.0",
    "postcss-loader": "^3.0.0",
    "webpack-cli": "^3.2.1",
    "webpack-dev-server": "^3.1.14",<% } %><% if ( bundlingTool === 'rollup' ) { %>
    "rollup-plugin-postcss": "^1.6.3",
    "rollup-plugin-serve": "^0.6.1",
    "rollup-plugin-static-site": "0.0.3",<% } %>
    "postcss-import": "^11.1.0",
    "suitcss-components-test": "^1.0.0"<% } %><% if ( (manualTests || integrationTests) && browserModule && !sassModule && bundlingTool === 'rollup' ) { %>,
    "minimist": "^1.2.0"<% } %><% if ( (manualTests || integrationTests) || ((browserModule && !sassModule) && (transpile || automatedTests)) ) { %><% if ( bundlingTool === 'webpack' ) { %>,
    "webpack": "^4.12.0"<% } %><% } %><% if ( sassModule ) { %>,
    "sass-true": "^2.1.3"<% } %><% if ( integrationTests ) { %><% if ( cloudBrowsers ) { %>,
    "wdio-browserstack-service": "^0.1.16"<% } %>,
    "wdio-docker-service": "^1.3.0",
    "wdio-mocha-framework": "^0.5.13",
    "wdio-spec-reporter": "^0.1.4",
    "webdriverio": "^4.12.0",
    "local-web-server": "^1.2.4",
    "http-shutdown": "^1.0.3"<% } %><% if ( transpile ) { %>,
    "@babel/core": "^7.2.2",
    "@babel/cli": "^7.2.3",
    "babel-preset-niksy": "^4.1.0"<% if ( browserModule ) { %>,
    "@babel/plugin-transform-object-assign": "^7.2.0"<% } %><% if ( browserModule && !sassModule ) { %><% if ( bundlingTool === 'webpack' ) { %>,
    "babel-loader": "^8.0.4"<% } %><% } %><% if ( automatedTests && browserModule && !sassModule ) { %>,
    "@babel/plugin-transform-runtime": "^7.2.0",
    "@babel/runtime": "^7.2.0"<% } %><% if ( automatedTests ) { %><% if ( !browserModule || (browserModule && integrationTests) ) { %>,
    "@babel/register": "^7.0.0"<% } %><% if ( codeCoverage ) { %><% if ( !browserModule && !sassModule ) { %>,
    "babel-plugin-istanbul": "^5.1.0"<% } %><% } %><% } %><% } %><% if ( esModules ) { %>,
    "rollup": "^1.0.0"<% if ( transpile ) { %>,
    "rollup-plugin-babel": "^4.2.0"<% } %><% } %><% if ( bundlingTool === 'rollup' ) { %>,
    "rollup-plugin-node-resolve": "^4.0.0",
    "rollup-plugin-commonjs": "^9.2.0",
    "rollup-plugin-node-builtins": "^2.1.2",
    "rollup-plugin-node-globals": "^1.4.0"<% } %>
  },<% if ( isScopedPackage ) { %>
  "publishConfig": {
    "access": "public"
  },<% } %>
  "engines": {
    "node": ">=<%= nodeEngineVersion %>"
  }<% if ( keywords.length > 0 ) { %>,
  "keywords": [<% for ( var i = 0, keywordsLength = keywords.length; i < keywordsLength; i++ ) { %>
    "<%= keywords[i] %>"<% if ( i !== keywordsLength-1 ) { %>,<% } %>
  <% } %>]<% } %>,
  "repository": {
    "type": "git",
    "url": "git+https://<%= gitRepo.host %>/<%= gitRepo.repository %>.git"
  },
  "bugs": {
    "url": "https://<%= gitRepo.host %>/<%= gitRepo.repository %>/issues"
  },
  "homepage": "https://<%= gitRepo.host %>/<%= gitRepo.repository %>#readme"
}
