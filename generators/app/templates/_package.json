{
  "name": "<%= moduleName %>",
  "version": "<% if ( version ) { %><%= version %><% } else { %>0.0.0<% } %>",
  "description": "<%= moduleDescription %>",
  "main": "index.js",
  "author": "Ivan NikoliÄ‡ <niksy5@gmail.com> (http://ivannikolic.com/)",
  "license": "MIT",<% if ( browserModule && styles ) { %>
  "style": "index.css",<% } %><% if ( manualTests || automatedTests || integrationTests ) { %>
  "directories": {
    "test": "test"
  },<% } %>
  "scripts": {<% if ( (automatedTests && browserModule) || manualTests || integrationTests ) { %>
    "lint": "<% if ( automatedTests || integrationTests ) { %>eslint {index,test/**/*}.js<% } else { %>eslint index.js<% } %><% if ( browserModule && styles ) { %> && stylelint index.css<% } %>"<% } %><% if ( automatedTests && browserModule ) { %>,
    "test:automated": "karma start",
    "test:automated:local": "karma start --browsers Chrome"<% } %><% if ( integrationTests ) { %>,
    "test:integration": "gulp test:prepare && wdio"<% } %><% if ( manualTests ) { %>,
    "test:manual:local": "gulp test:local:manual --watch"<% } %><% if ( (automatedTests && browserModule) || manualTests || integrationTests ) { %>,
    "test": "npm run lint<% if ( automatedTests && browserModule ) { %> && npm run test:automated<% } %><% if ( integrationTests ) { %> && npm run test:integration<% } %>"<% } else { %>
    "test": "<% if ( automatedTests ) { %>eslint {index,test/**/*}.js && mocha test/**/*.js<% if ( testingInterface !== 'bdd' ) { %> --ui <%= testingInterface %><% } %><% } else { %>eslint index.js<% } %><% if ( browserModule && styles ) { %> && stylelint index.css<% } %>"<% } %>
  }<% if ( jqueryModule ) { %>,
  "dependencies": {
    "jquery": "^1.12.4"
  }<% } %>,
  "devDependencies": {
    "eslint": "^2.9.0",
    "eslint-config-niksy": "^2.0.0",
    "eslint-plugin-promise": "^1.1.0"<% if ( browserModule && styles ) { %>,
    "stylelint": "^6.7.0",
    "stylelint-config-niksy": "^2.2.0"<% } %><% if ( automatedTests && browserModule ) { %>,
    "karma": "^0.13.22",
    "karma-browserify": "^5.0.5",
    "karma-browserstack-launcher": "^1.0.0",
    "karma-chrome-launcher": "^1.0.1",
    "karma-html2js-preprocessor": "^1.0.0",
    "karma-mocha": "^1.0.1",
    "karma-mocha-reporter": "^2.0.3"<% } %><% if ( automatedTests || integrationTests ) { %>,
    "mocha": "^2.4.5"<% } %><% if ( manualTests || integrationTests ) { %>,
    "browserify": "^13.0.1",
    "del": "^2.2.0",
    "event-stream": "^3.3.2",
    "globby": "^4.1.0",
    "gulp": "^3.9.1",
    "gulp-debug": "^2.1.2",
    "gulp-nunjucks-render": "^2.0.0",
    "gulp-plumber": "^1.1.0",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-util": "^3.0.7",
    "minimist": "^1.2.0",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^1.1.0",
    "local-web-server": "^1.2.4",
    "watchify": "^3.7.0"<% } %><% if ( manualTests ) { %>,
    "opn": "^4.0.2"<% } %><% if ( integrationTests ) { %>,
    "browserstacktunnel-wrapper": "^1.4.2",
    "wdio-mocha-framework": "^0.2.13",
    "wdio-spec-reporter": "kevinlambert/wdio-spec-reporter#release",
    "webdriverio": "^4.0.9",
    "http-shutdown": "^1.0.3"<% } %>
  },
  "engines": {
    "node": "<% if ( onlyNodeLts ) { %>>=4<% } else { %>>=0.10.0<% } %>"
  }<% if ( keywords.length > 0 || jqueryModule ) { %>,
  "keywords": [<% if ( jqueryModule ) { %>
  	"jquery-plugin",
  	"ecosystem:jquery"<% if ( keywords.length > 0 ) { %>,<% } %><% } %><% for ( var i = 0, keywordsLength = keywords.length; i < keywordsLength; i++ ) { %>
    "<%= keywords[i] %>"<% if ( i !== keywordsLength-1 ) { %>,<% } %>
  <% } %>]<% } %>,
  "repository": {
    "type": "git",
    "url": "git+https://github.com/<%= githubRepo %>.git"
  },
  "bugs": {
    "url": "https://github.com/<%= githubRepo %>/issues"
  },
  "homepage": "https://github.com/<%= githubRepo %>#readme"
}
